{
    "csv-parser": {
        "description": "Generic CSV Parser is a generic bot configurable to parse different csv collected files. Ignoring lines starting with character #. URLs without protocol can be prefixed with a default value.",
        "group": "Parser",
        "module": "intelmq.bots.parsers.generic.parser_csv",
        "parameters": {
            "column_regex_search": {},
            "columns": [
                "",
                "time.source",
                "source.ip",
                "event_description.target",
                "event_description.text",
                ""
            ],
            "default_url_protocol": "http://",
            "delimiter": ",",
            "skip_header": false,
            "time_format": null,
            "type": "scanner",
            "type_translation": null
        }
    },
    "cymru-whois-expert": {
        "description": "Cymry Whois (IP to ASN) is the bot responsible to add network information to the events (BGP, ASN, AS Name, Country, etc..).",
        "group": "Expert",
        "module": "intelmq.bots.experts.cymru_whois.expert",
        "name": "Cymru Whois",
        "parameters": {
            "redis_cache_db": 5,
            "redis_cache_host": "10.34.1.15",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "deduplicator-expert": {
        "description": "Deduplicator is the bot responsible for detection and removal of duplicate messages. Messages get cached for <redis_cache_ttl> seconds. If found in the cache, it is assumed to be a duplicate.",
        "group": "Expert",
        "module": "intelmq.bots.experts.deduplicator.expert",
        "name": "Deduplicator",
        "parameters": {
            "filter_keys": "raw,time.observation",
            "filter_type": "blacklist",
            "redis_cache_db": 6,
            "redis_cache_host": "10.34.1.15",
            "redis_cache_password": null,
            "redis_cache_port": 6379,
            "redis_cache_ttl": 86400
        }
    },
    "elasticsearch-output": {
        "description": "ES OUTPUT",
        "group": "Output",
        "module": "intelmq.bots.outputs.elasticsearch.output",
        "parameters": {
            "elastic_doctype": "events",
            "elastic_host": "10.34.1.20",
            "elastic_index": "intelmq",
            "elastic_port": 9200,
            "flatten_fields": "extra",
            "http_password": null,
            "http_username": null,
            "replacement_char": "_"
        }
    },
    "file-input-collector": {
        "description": "Fileinput collector fetches data from a file.",
        "group": "Collector",
        "module": "intelmq.bots.collectors.file.collector_file",
        "parameters": {
            "chunk_replicate_header": true,
            "chunk_size": null,
            "delete_file": false,
            "feed": "FileCollector",
            "path": "/tmp/honeypot",
            "postfix": ".csv",
            "provider": "",
            "rate_limit": 5
        }
    },
    "file-output": {
        "description": "File is the bot responsible to send events to a file.",
        "group": "Output",
        "module": "intelmq.bots.outputs.file.output",
        "name": "File",
        "parameters": {
            "file": "/opt/intelmq/var/lib/bots/file-output/events.txt",
            "hierarchical_output": false
        }
    },
    "gethostbyname-1-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "gethostbyname-2-expert": {
        "description": "fqdn2ip is the bot responsible to parsing the ip from the fqdn.",
        "group": "Expert",
        "module": "intelmq.bots.experts.gethostbyname.expert",
        "name": "Gethostbyname",
        "parameters": {}
    },
    "taxonomy-expert": {
        "description": "Taxonomy is the bot responsible to apply the eCSIRT Taxonomy to all events.",
        "group": "Expert",
        "module": "intelmq.bots.experts.taxonomy.expert",
        "name": "Taxonomy",
        "parameters": {}
    },
    "url2fqdn-expert": {
        "description": "url2fqdn is the bot responsible to parsing the fqdn from the url.",
        "group": "Expert",
        "module": "intelmq.bots.experts.url2fqdn.expert",
        "name": "url2fqdn",
        "parameters": {
            "load_balance": true,
            "overwrite": false
        }
    }
}
